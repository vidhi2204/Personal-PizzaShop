@using DAL.ViewModels;
@model PaginationViewModel<User>

@* <link rel="stylesheet" href="https://cdn.datatables.net/2.2.2/css/dataTables.dataTables.css"> *@


<!-- user list -->
<div class="user-list-main-div  d-flex justify-content-between mt-2">
    <!-- user txt -->
    <div class="user-div d-flex col-md-3">
        <div class="user-text fs-2 fw-bold text-primary">Users</div>
    </div>

    <!-- search add user -->
    <div class="search-adduser-div d-flex align-items-center justify-content-between mt-2">
        <div class="search-button ">
            <input type="text" id="searchbtn" placeholder="Search" class="p-1 border ">
            <i class="fa-solid fa-magnifying-glass search-icon-style "></i>
        </div>
        <div class="adduser-button">
            <a asp-action="AddUser" asp-controller="User" class="btn btn-primary text-light p-2 ms-3 border text">+ Add
                User</a>
        </div>

    </div>
</div>

<!-- table -->
<div class="container">
    <div class="table-main-div table-responsive mt-3 bg-white mx-auto ">
        <table id="example" class="table display">
            <thead>
                <tr>
                    <th scope="col">Name <i class="bi bi-arrow-down-up" id="sort-name" data-column="Name" data-direction="asc"></i></th>
                    <th scope="col">Email</th>
                    <th scope="col">Phone</th>
                    <th scope="col">Role<i class="bi bi-arrow-down-up ms-1" id="sort-role"  data-column="Name" data-direction="asc"></i></th>
                    <th scope="col">Status</th>
                    <th scope="col">Action </th>
                </tr>
            </thead>
            <tbody id="TableBody">
                @await Html.PartialAsync("_UserListPartial", Model)
                @* @foreach (var item in Model) {
            if(!item.Isdelete){
             <tr>
            <td>
                <img src="@item.ProfileImage" alt="" width="35px" style="border-radius: 50%;"> @Html.DisplayFor(modelItem => item.FirstName) @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Userlogin.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Phone)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Role.RoleName)
            </td>
            <td>
                @if(item.Status == true)
                {
                    <div class="text-center text-white bg-success rounded-pill w-75 p-lg-0 ps-1 pe-4">
                        Active</div>
                }
                else
                {
                    <div class="text-center text-white bg-danger rounded-pill w-75 p-lg-0 ps-1 pe-4">
                        Inactive</div>
                }
                
            </td>
            <td>
                <a asp-action="EditUser" asp-controller="User" asp-route-Email="@item.Userlogin.Email"><i class="fa-solid fa-pen w-25 me-sm-2 me-xs-2 me-lg-0 text-dark" ></i></a>
                <i class="fa-solid fa-trash-can" data-bs-toggle="modal" data-bs-target="#delete-user" data-email="@item.Userlogin.Email"></i>
                    <!-- delete item modal-->
            </td>
             </tr>
            }
         } *@
            </tbody>
        </table>

    </div>
    @*  Pagination div *@
    <div class="pagination-main-div d-flex justify-content-end gap-2 p-3 pt-0 bg-white ">

        <span class="mt-2">Items Per page:</span>

        <select id="itemsperpage">
            <option value="5">5</option>
            <option value="10">10</option>
            <option value="15">15</option>
        </select>

        <span class=" mt-2 ms-1" id="pagination-text"></span>
        <a id="left-arrow" class="btn border border-dark bg-light ms-2">&lt;</a>
        <a id="right-arrow" class="btn border border-dark bg-light ms-2">&gt;</a>
    </div>
</div>

</div>



<div id="delete-user" class="modal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Delete Conformation</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body ">
                <div class="delete-cat-image d-flex flex-column  align-items-center">
                    <img src="images/toppng.com-warning-icon-2400x2400.png" width="50px" alt="">
                    <p>Are you sure you want to delete this User?</p>
                    <form method="post" asp-action="deleteUser" asp-controller="User">
                        <input type="hidden" id="deleteEmail" name="Email" />
                        <div class="modal-footer d-flex justify-content-center">
                            <button class="btn btn-primary" type="submit">Yes</button>
                            <button type="button" class="btn btn-outline-primary" data-bs-dismiss="modal">No</button>
                        </div>
                    </form>
                </div>

            </div>
        </div>
    </div>
</div>




@section Scripts {
    <script src="https://cdn.datatables.net/1.10.9/js/jquery.dataTables.min.js"></script>
    <script src="js/bootstrap.bundle.min.js"></script>
    @* <script>
        let table = new DataTable('#example');

        table.on('click', 'tbody tr', function () {
            let data = table.row(this).data();

            alert('You clicked on ' + data[0] + "'s row");
        });
    </script> *@

    @* <script>
        function changePage(page) {
            const PageSize = document.getElementById("PageSize").value;
            window.location.href = `?PageNo=${page}&PageSize=${PageSize}`;
        }

        function pageSizeChange(page) {
            const PageSize = document.getElementById("PageSize").value;
            window.location.href = `?PageNo=${page}&PageSize=${PageSize}`;
        }
    </script> *@

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var deleteModal = document.getElementById('delete-user');
            deleteModal.addEventListener('show.bs.modal', function (event) {
                
                var deletebtn = event.relatedTarget;
                var email = deletebtn.getAttribute('data-email');
                var deleteEmailInput = document.getElementById('deleteEmail');
                deleteEmailInput.value = email;
            });
        });
    </script>

    <script>
        $(document).ready(function () {
            var successMessage = '@TempData["SuccessMessage"]';
            var errorMessage = '@TempData["ErrorMessage"]';
            console.log("successMessage", successMessage);
             toastr.options = {
                "closeButton": true,
                "progressBar": true,
                "timeOut": "2000"
            };
            if (successMessage) {
                toastr.success(successMessage);
            }
            if (errorMessage) {
                toastr.error(errorMessage);
            }
        });
    </script>


    <script>
        $(document).ready(function () {
            let currentPage = 1;
            let pageSize = $("#itemsperpage").val();
            let searchText = "";
            let sortColumn = "";
            let sortDirection = "asc";

            function loadTable(page = 1, search = "", sortColumn = "", sortDirection = "asc", pageSize = 5) {
                $.ajax({
                    url: "/User/PaginatedData",
                    type: "GET",
                    data: { search, sortColumn, sortDirection, pageNumber: page, pageSize },
                    success: function (data) {
                        $("#TableBody").html(data);
                        currentPage = page;

                        pageSize = parseInt(pageSize);
                        var totalRecords = parseInt($("#totalCount").val()) || 0;
                        var startItem = totalRecords === 0 ? 0 : (currentPage - 1) * pageSize + 1;
                        var endItem = Math.min(currentPage * pageSize, totalRecords);

                        $("#pagination-text").text("Showing " + startItem + " - " + endItem + " of " + totalRecords);
                        $("#left-arrow").prop("disabled", page === 1);
                        $("#right-arrow").prop("disabled", page * pageSize >= totalRecords);
                    }
                });
            }

            // Search on keyup
            $("#searchbtn").on("keyup", function () {
                searchText = $(this).val().trim();
                currentPage =1;
                loadTable(currentPage, searchText, sortColumn, sortDirection,pageSize);
            });

            // Sorting functionality
            $("#sort-name").on("click", function () {
                sortColumn = $(this).data("column");
                console.log(sortColumn);
                sortDirection = $(this).attr("data-direction") === "asc" ? "desc" : "asc";
                $(this).attr("data-direction", sortDirection);
                loadTable(currentPage,searchText, sortColumn, sortDirection, pageSize);
            });

            $("#sort-role").on("click", function () {
                sortColumn = $(this).data("column");
                console.log(sortColumn);
                sortDirection = $(this).attr("data-direction") === "asc" ? "desc" : "asc";
                $(this).attr("data-direction", sortDirection);
                loadTable(currentPage,searchText, sortColumn, sortDirection, pageSize);
            });

            // Pagination buttons
            $("#right-arrow").on("click", function () {
                let rightarrow = !$(this).prop("disabled");
                console.log(rightarrow);
                if (rightarrow) {
                    currentPage ++;
                    loadTable(currentPage,searchText, sortColumn, sortDirection, pageSize);
                }
            });

            $("#left-arrow").on("click", function () {
                let leftarrow = !$(this).prop("disabled");
                console.log(leftarrow);
                if (leftarrow) {
                    currentPage --;
                    loadTable(currentPage,searchText, sortColumn, sortDirection, pageSize);
                }
            });

            // Items per page dropdown
            $("#itemsperpage").on("change", function () {
                pageSize = $(this).val();
                console.log(pageSize);
                currentPage=1;
                loadTable(currentPage,searchText, sortColumn, sortDirection, pageSize);
            });

            // Initial table load
            loadTable();
        });
    </script>



}
